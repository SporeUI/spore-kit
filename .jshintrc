/**
JSHint有两种类型的options：
enforcing -- 它们使JSHint更加严格，详细介绍:
https://github.com/mytcer/jshint-docs-cn/blob/master/enforcing_options.md
relaxing -- 它们用来抑制一些警告，详细介绍:
https://github.com/mytcer/jshint-docs-cn/blob/master/relaxing_options.md

官方文档
jshint.com/docs/options
**/
{

	//可以使用的未在模块中定义的全局变量
	"predef" : [
		"JSON"
	],

	//-------- enforcing ---------

	//值为true时，禁止使用位操作符，如"^，|，&"等.
	"bitwise" : true,

	//值为true时，变量名必须使用驼峰风格（如"loginStatus"）或UPPER_CASE风格（如"LOGIN_STATUS"）.
	"camelcase" : false,

	//值为true时，不能省略循环和条件语句后的大括号.
	"curly" : true,

	//值为true时，禁止使用"=="和"!="，而应该使用"==="和"!==".
	"eqeqeq" : true,

	//值为true时，在所有"for in"循环中，必须使用hasOwnPropery过滤掉对象继承来的成员.
	"forin" : true,

	//值为true时，调用立即执行的函数必须使用括号包裹.
	"immed" : true,

	//值为true时，禁止在变量定义之前使用它.
	"latedef" : false,

	//值为true时，构造函数名需要大写. 
	//经测试，该选项是否激活，JSHint都不会检查构造函数名.
	"newcap" : false,

	//值为true时，禁止使用arguments.caller与arguments.callee.
	"noarg" : false,

	//值为true时，不允许代码中出现空的语句块（"{}"）.
	//"noempty" : true,

	//值为true时，禁止使用产生副作用的构造器调用方式，如"new MyConstructor();".
	"nonew" : true,

	//值为true时，禁止使用一元递增（"++"）和递减（"--"）运算符.
	"plusplus" : false,

	//该选项用于统一代码中的引号风格，可选的值有三个：
	//  (1) single -- 只能使用单引号；
	//  (2) double -- 只能使用双引号；
	//  (3) true -- 两者任选其一，但不能同时出现.
	"quotmark" : "single",

	//值为true时，禁止使用未定义的变量.
	"undef" : true,

	//该选项激活后，对于"已定义却未使用的变量"会给出警告，可选的值有三个：
	//  (1) vars -- 只检查变量，不检查函数形参；
	//  (2) strict -- 检查变量和函数形参；
	//  (3) true -- 检查变量和函数形参，但允许这种情况：一个未使用的形参后紧随一个被使用的形参.
	"unused" : false,

	//值为true时，该选项会要求所有函数在ECMAScript 5的严格模式中运行.
	"strict" : false,

	//值为true时，禁止在代码的末尾出现空白.
	"trailing" : true,

	//该选项用于设置每个函数形参数量的上限，如"maxparams:3".
	"maxparams" : 6,

	//该选项用于设置每个函数中代码块嵌套层级的上限，如"maxdepth:1".
	"maxdepth" : 5,

	//该选项用于设置每个函数中语句数量的上限，如"maxstatements:4".
	//"maxstatements" : 20,

	//该选项用于设定每行的最大字符长度.
	//"maxlen" : 120,

	//开启对 "non-breaking whitespace" 字符的检查，这个字符会在 mac 上通过 option-space 按键输入
	"nonbsp" : true,

	//-------- relaxing ---------

	//值为false时，如果代码末尾省略了分号，则JSHint会给出警告；值为true时，则不会.
	"asi" : false,

	//值为false时，如果预期为条件表达式的地方使用了赋值表达式，则JSHint会给出警告；值为true时，则不会.
	"boss" : true,

	//值为false时，如果代码中有debugger语句，则JSHint会给出警告；值为true时，则不会.
	"debug" : false,

	//值为false时，如果代码中使用"=="来比较变量与null，则JSHint会给出警告；值为true时，则不会.
	"eqnull" : true,

	//值为true时，JSHint会使用ECMAScript 6的语法来校验你的代码.
	"esnext" : false,

	//值为false时，不允许在代码中使用eval.
	"evil" : false,

	//值为false时，只允许在函数调用或赋值时使用表达式.
	"expr" : false,

	//值为false时，如果在控制语句中定义了变量，却在控制语句之外使用变量，则JSHint会给出警告.
	"funcscope" : false,

	//值为false时，不允许使用全局级别的严格模式.
	//在全局中使用严格模式，会影响到第三方的JS，因此不建议这么做.
	"globalstrict" : false,

	//值为true时，允许单行语句块中最后一条语句不写分号；值为false时，则会给出警告.
	"lastsemic" : false,

	//值为true时，允许代码中存在大多数不安全的换行（不包括逗号出现在行首的情况）；值为false时，会给出警告.
	"laxbreak" : false,

	//值为true时，允许逗号出现在行首的换行方式；值为false时，会给出警告.
	"laxcomma" : false,

	//值为true时，允许在循环中定义函数；值为false时，会给出警告.
	"loopfunc" : false,

	//值为true时，允许多行字符串；值为false时，则会给出警告.
	"multistr" : false,

	//值为true时，允许在代码中使用__proto__属性；值为false时，则会给出警告.
	"proto" : false,

	//值为true时，允许在代码中使用"javascript:..."这样的url；值为false时，则会给出警告.
	"scripturl" : true,

	//值为true时，允许用obj['name']和obj.name两种方式访问对象的属性；值为false时，不允许使用obj['name']方式
	"sub" : false,

	//是否允许使用像"new function() {...}"这样怪异的构造器，true -- 允许，false -- 不允许.
	"supernew" : false,

	//是否允许在严格模式下的非构造函数中使用this，true -- 允许，false -- 不允许.
	"validthis" : true,

	//-------- enviroments ---------

	//定义 ECMAScript version
	"esversion" : 6,

	//允许代码中存在浏览器BOM提供的全局变量
	"browser" : true,

	//当用 browserify 或者类似工具来组织文件时，允许相关全局变量
	"browserify" : true

}